/**
 * SCSS Mixins
 * 通用的样式混入工具
 */

// ===========================
// 1. 响应式断点混入
// ===========================
$breakpoints: (
  'xs': 0,
  'sm': 576px,
  'md': 768px,
  'lg': 992px,
  'xl': 1200px,
  '2xl': 1400px
);

@mixin respond-to($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    $value: map-get($breakpoints, $breakpoint);
    @if $value > 0 {
      @media (min-width: $value) {
        @content;
      }
    } @else {
      @content;
    }
  } @else {
    @warn "无效的断点: #{$breakpoint}";
  }
}

@mixin respond-below($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    $value: map-get($breakpoints, $breakpoint);
    @if $value > 0 {
      @media (max-width: $value - 1px) {
        @content;
      }
    }
  }
}

@mixin respond-between($min, $max) {
  @if map-has-key($breakpoints, $min) and map-has-key($breakpoints, $max) {
    $min-value: map-get($breakpoints, $min);
    $max-value: map-get($breakpoints, $max);
    @media (min-width: $min-value) and (max-width: $max-value - 1px) {
      @content;
    }
  }
}

// ===========================
// 2. 布局混入
// ===========================

// Flexbox 居中
@mixin flex-center($direction: row) {
  display: flex;
  flex-direction: $direction;
  align-items: center;
  justify-content: center;
}

// Flexbox 布局
@mixin flex($direction: row, $wrap: nowrap, $align: stretch, $justify: flex-start) {
  display: flex;
  flex-direction: $direction;
  flex-wrap: $wrap;
  align-items: $align;
  justify-content: $justify;
}

// Grid 居中
@mixin grid-center {
  display: grid;
  place-items: center;
}

// 绝对居中
@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

// 固定比例容器
@mixin aspect-ratio($width: 16, $height: 9) {
  position: relative;

  &::before {
    content: '';
    display: block;
    padding-top: percentage($height / $width);
  }

  > * {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
}

// ===========================
// 3. 文本混入
// ===========================

// 文本截断
@mixin text-ellipsis($lines: 1) {
  @if $lines == 1 {
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
  } @else {
    display: -webkit-box;
    -webkit-line-clamp: $lines;
    -webkit-box-orient: vertical;
    overflow: hidden;
    text-overflow: ellipsis;
  }
}

// 文本渐变
@mixin text-gradient($start-color, $end-color, $direction: to right) {
  background: linear-gradient($direction, $start-color, $end-color);
  -webkit-background-clip: text;
  background-clip: text;
  -webkit-text-fill-color: transparent;
}

// ===========================
// 4. 视觉效果混入
// ===========================

// 阴影
@mixin box-shadow($level: 1) {
  @if $level == 1 {
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
  } @else if $level == 2 {
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  } @else if $level == 3 {
    box-shadow: 0 10px 15px rgba(0, 0, 0, 0.1);
  } @else if $level == 4 {
    box-shadow: 0 20px 25px rgba(0, 0, 0, 0.15);
  }
}

// 渐变背景
@mixin gradient-bg($start-color, $end-color, $direction: to right) {
  background: linear-gradient($direction, $start-color, $end-color);
}

// 毛玻璃效果
@mixin glass-effect($opacity: 0.8, $blur: 10px) {
  background-color: rgba(255, 255, 255, $opacity);
  backdrop-filter: blur($blur);
  -webkit-backdrop-filter: blur($blur);
}

// 圆角
@mixin border-radius($radius: 8px) {
  border-radius: $radius;
}

// ===========================
// 5. 动画混入
// ===========================

// 过渡动画
@mixin transition($property: all, $duration: 0.3s, $timing: ease, $delay: 0s) {
  transition: $property $duration $timing $delay;
}

// 变换
@mixin transform($transforms...) {
  transform: $transforms;
}

// 动画
@mixin animation($name, $duration: 1s, $timing: ease, $delay: 0s, $iteration: 1, $direction: normal, $fill: both) {
  animation: $name $duration $timing $delay $iteration $direction $fill;
}

// 悬停效果
@mixin hover-lift($scale: 1.05) {
  transition: transform 0.3s ease;

  &:hover {
    transform: scale($scale) translateY(-2px);
  }
}

// ===========================
// 6. 表单混入
// ===========================

// 输入框样式
@mixin input-style($border-color: #d1d5db, $focus-color: #3b82f6) {
  padding: 12px 16px;
  border: 1px solid $border-color;
  border-radius: 8px;
  font-size: 14px;
  transition: border-color 0.2s ease, box-shadow 0.2s ease;

  &:focus {
    outline: none;
    border-color: $focus-color;
    box-shadow: 0 0 0 3px rgba($focus-color, 0.1);
  }

  &::placeholder {
    color: #9ca3af;
  }
}

// 按钮样式
@mixin button-style($bg-color: #3b82f6, $text-color: white, $hover-bg: #2563eb) {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: 12px 24px;
  background-color: $bg-color;
  color: $text-color;
  border: none;
  border-radius: 8px;
  font-size: 14px;
  font-weight: 500;
  cursor: pointer;
  transition: background-color 0.2s ease, transform 0.1s ease;

  &:hover {
    background-color: $hover-bg;
    transform: translateY(-1px);
  }

  &:active {
    transform: translateY(0);
  }

  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    transform: none;
  }
}

// ===========================
// 7. 工具混入
// ===========================

// 清除浮动
@mixin clearfix {
  &::after {
    content: '';
    display: table;
    clear: both;
  }
}

// 隐藏滚动条
@mixin hide-scrollbar {
  -ms-overflow-style: none;
  scrollbar-width: none;

  &::-webkit-scrollbar {
    display: none;
  }
}

// 自定义滚动条
@mixin custom-scrollbar($thumb-color: #cbd5e0, $track-color: #f7fafc, $width: 6px) {
  &::-webkit-scrollbar {
    width: $width;
    height: $width;
  }

  &::-webkit-scrollbar-track {
    background: $track-color;
    border-radius: $width / 2;
  }

  &::-webkit-scrollbar-thumb {
    background: $thumb-color;
    border-radius: $width / 2;

    &:hover {
      background: darken($thumb-color, 10%);
    }
  }
}

// 选择器重置
@mixin reset-appearance {
  appearance: none;
  -webkit-appearance: none;
  -moz-appearance: none;
}

// ===========================
// 8. 特殊效果混入
// ===========================

// 卡片样式
@mixin card($padding: 24px, $radius: 12px, $shadow: 1) {
  background: white;
  padding: $padding;
  border-radius: $radius;
  @include box-shadow($shadow);
}

// 加载动画
@mixin loading-spinner($size: 20px, $color: #3b82f6, $thickness: 2px) {
  width: $size;
  height: $size;
  border: $thickness solid rgba($color, 0.2);
  border-top: $thickness solid $color;
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

// 脉冲动画
@mixin pulse-animation($color: #3b82f6, $duration: 2s) {
  position: relative;

  &::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 100%;
    height: 100%;
    background: $color;
    border-radius: 50%;
    transform: translate(-50%, -50%);
    animation: pulse $duration infinite;
    opacity: 0;
  }
}

@keyframes pulse {
  0% {
    transform: translate(-50%, -50%) scale(0.9);
    opacity: 0.7;
  }
  100% {
    transform: translate(-50%, -50%) scale(1.3);
    opacity: 0;
  }
}

// 打字机效果
@mixin typewriter($steps, $duration: 4s) {
  overflow: hidden;
  border-right: 2px solid;
  white-space: nowrap;
  animation:
    typewriter $duration steps($steps) 1s both,
    blinkTextCursor 500ms steps($steps) infinite normal;
}

@keyframes typewriter {
  from { width: 0; }
  to { width: 100%; }
}

@keyframes blinkTextCursor {
  from { border-right-color: rgba(255, 255, 255, 0.75); }
  to { border-right-color: transparent; }
}

// ===========================
// 9. 性能优化混入
// ===========================

// GPU 加速
@mixin gpu-acceleration {
  transform: translateZ(0);
  backface-visibility: hidden;
  perspective: 1000px;
}

// Will-change 优化
@mixin will-change($property) {
  will-change: $property;
}

// 图片优化
@mixin responsive-image {
  max-width: 100%;
  height: auto;
  display: block;
}
