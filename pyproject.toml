[project]
name = "wuhao-tutor"
version = "0.1.0"
description = "五好伴学 - 基于AI的初高中学情管理系统"
readme = "README.md"
authors = [
    { name = "Liguo Ma", email = "maliguo@outlook.com" }
]
requires-python = ">=3.11"
dependencies = [
    "fastapi>=0.104.1",
    "uvicorn[standard]>=0.24.0",
    "sqlalchemy>=2.0.23",
    "alembic>=1.12.1",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    "python-jose[cryptography]>=3.3.0",
    "python-multipart>=0.0.6",
    "bcrypt>=4.1.1",
    "httpx>=0.25.2",
    "structlog>=23.2.0",
    "redis>=5.0.1",
    "asyncpg>=0.29.0",
    "psycopg2-binary>=2.9.5",
    "aiofiles>=23.2.1",
    "python-dotenv>=1.0.0",
    # 百炼AI服务相关依赖
    "pillow>=10.0.0",
    "oss2>=2.18.0",
    "alibabacloud-ocr20191230>=3.0.0",
    "opencv-python>=4.8.0",
    "numpy>=1.24.0",
    "aioredis>=2.0.1",
    "celery>=5.3.0",
    "aiosqlite>=0.21.0",
    "greenlet>=3.2.4",
    "pyjwt>=2.10.1",
    # 性能监控相关依赖
    "psutil>=5.9.0",
    "aiohttp>=3.9.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.3",
    "pytest-asyncio>=0.21.1",
    "pytest-cov>=4.1.0",
    "black>=23.11.0",
    "flake8>=6.1.0",
    "mypy>=1.7.1",
    "pre-commit>=3.6.0",
    "httpx>=0.25.2",
    "aiohttp>=3.9.0",
]
test = [
    "pytest>=7.4.3",
    "pytest-asyncio>=0.21.1",
    "pytest-cov>=4.1.0",
    "factory-boy>=3.3.0",
    "faker>=20.1.0",
]

[project.scripts]
wuhao-tutor = "wuhao_tutor:main"

[build-system]
requires = ["uv_build>=0.8.22,<0.9.0"]
build-backend = "uv_build"

# 工具配置
[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
(
  /(
      \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
)
'''

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
ignore_missing_imports = true
no_implicit_optional = true
show_error_codes = true
strict_equality = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["src"]
branch = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [".git", "__pycache__", "docs/source/conf.py", "old", "build", "dist"]
max-complexity = 10

[dependency-groups]
dev = [
    "pytest>=8.4.2",
    "pytest-asyncio>=1.2.0",
    "pytest-cov>=7.0.0",
]
