"""create all missing tables

Revision ID: 8656ac8e3fe6
Revises:
Create Date: 2025-10-02 20:12:15.706473

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision: str = '8656ac8e3fe6'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('knowledge_graphs',
    sa.Column('name', sa.String(length=100), nullable=False, comment='图谱名称'),
    sa.Column('description', sa.Text(), nullable=True, comment='图谱描述'),
    sa.Column('subject', sa.String(length=20), nullable=False, comment='学科'),
    sa.Column('node_count', sa.Integer(), nullable=False, comment='节点数量'),
    sa.Column('relation_count', sa.Integer(), nullable=False, comment='关系数量'),
    sa.Column('max_depth', sa.Integer(), nullable=False, comment='最大深度'),
    sa.Column('version', sa.String(length=10), nullable=False, comment='版本号'),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='是否激活'),
    sa.Column('config', sa.JSON(), nullable=True, comment='配置信息'),
    sa.Column('created_by', sa.UUID(), nullable=True, comment='创建者ID'),
    sa.Column('id', sa.String(length=36), nullable=False, comment='主键ID'),
    sa.Column('created_at', sa.String(length=50), nullable=False, comment='创建时间'),
    sa.Column('updated_at', sa.String(length=50), nullable=False, comment='更新时间'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_index(op.f('ix_knowledge_graphs_subject'), 'knowledge_graphs', ['subject'], unique=False)
    op.create_table('knowledge_nodes',
    sa.Column('name', sa.String(length=100), nullable=False, comment='节点名称'),
    sa.Column('code', sa.String(length=50), nullable=False, comment='节点编码（用于唯一标识）'),
    sa.Column('node_type', sa.String(length=20), nullable=False, comment='节点类型'),
    sa.Column('subject', sa.String(length=20), nullable=False, comment='所属学科'),
    sa.Column('level', sa.Integer(), nullable=False, comment='层级（1-10）'),
    sa.Column('parent_id', sa.UUID(), nullable=True, comment='父节点ID'),
    sa.Column('description', sa.Text(), nullable=True, comment='详细描述'),
    sa.Column('keywords', sa.JSON(), nullable=True, comment='关键词列表'),
    sa.Column('examples', sa.JSON(), nullable=True, comment='示例列表'),
    sa.Column('difficulty', sa.Integer(), nullable=False, comment='难度等级（1-5）'),
    sa.Column('importance', sa.Integer(), nullable=False, comment='重要性（1-5）'),
    sa.Column('average_mastery', sa.Numeric(precision=3, scale=2), nullable=False, comment='平均掌握度'),
    sa.Column('learning_count', sa.Integer(), nullable=False, comment='学习人数'),
    sa.Column('mistake_rate', sa.Numeric(precision=3, scale=2), nullable=False, comment='错误率'),
    sa.Column('tags', sa.JSON(), nullable=True, comment='标签列表'),
    sa.Column('external_links', sa.JSON(), nullable=True, comment='外部链接'),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='是否激活'),
    sa.Column('id', sa.String(length=36), nullable=False, comment='主键ID'),
    sa.Column('created_at', sa.String(length=50), nullable=False, comment='创建时间'),
    sa.Column('updated_at', sa.String(length=50), nullable=False, comment='更新时间'),
    sa.ForeignKeyConstraint(['parent_id'], ['knowledge_nodes.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code'),
    sa.UniqueConstraint('id')
    )
    op.create_index('idx_knowledge_nodes_parent', 'knowledge_nodes', ['parent_id'], unique=False)
    op.create_index('idx_knowledge_nodes_subject_level', 'knowledge_nodes', ['subject', 'level'], unique=False)
    op.create_index(op.f('ix_knowledge_nodes_subject'), 'knowledge_nodes', ['subject'], unique=False)
    op.create_table('learning_paths',
    sa.Column('name', sa.String(length=100), nullable=False, comment='路径名称'),
    sa.Column('description', sa.Text(), nullable=True, comment='路径描述'),
    sa.Column('subject', sa.String(length=20), nullable=False, comment='目标学科'),
    sa.Column('target_level', sa.Integer(), nullable=False, comment='目标掌握水平（1-10）'),
    sa.Column('difficulty_preference', sa.Integer(), nullable=False, comment='难度偏好（1-5）'),
    sa.Column('node_sequence', sa.JSON(), nullable=False, comment='节点学习序列'),
    sa.Column('estimated_hours', sa.Integer(), nullable=True, comment='预计学习时长（小时）'),
    sa.Column('prerequisite_nodes', sa.JSON(), nullable=True, comment='前置知识节点'),
    sa.Column('target_grade_levels', sa.JSON(), nullable=True, comment='适用年级'),
    sa.Column('usage_count', sa.Integer(), nullable=False, comment='使用次数'),
    sa.Column('average_completion_rate', sa.Numeric(precision=3, scale=2), nullable=False, comment='平均完成率'),
    sa.Column('average_satisfaction', sa.Numeric(precision=3, scale=2), nullable=False, comment='平均满意度'),
    sa.Column('version', sa.String(length=10), nullable=False, comment='版本号'),
    sa.Column('is_published', sa.Boolean(), nullable=False, comment='是否已发布'),
    sa.Column('created_by', sa.UUID(), nullable=True, comment='创建者ID'),
    sa.Column('id', sa.String(length=36), nullable=False, comment='主键ID'),
    sa.Column('created_at', sa.String(length=50), nullable=False, comment='创建时间'),
    sa.Column('updated_at', sa.String(length=50), nullable=False, comment='更新时间'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_index(op.f('ix_learning_paths_subject'), 'learning_paths', ['subject'], unique=False)
    op.create_table('chat_sessions',
    sa.Column('user_id', sa.String(length=36), nullable=False, comment='用户ID'),
    sa.Column('title', sa.String(length=200), nullable=False, comment='会话标题'),
    sa.Column('subject', sa.String(length=50), nullable=True, comment='学科（数学、语文、英语等）'),
    sa.Column('grade_level', sa.String(length=20), nullable=True, comment='学段（初一、高二等）'),
    sa.Column('status', sa.String(length=20), nullable=False, comment='会话状态'),
    sa.Column('question_count', sa.Integer(), nullable=False, comment='问题总数'),
    sa.Column('total_tokens', sa.Integer(), nullable=False, comment='总token消耗'),
    sa.Column('context_enabled', sa.Boolean(), nullable=False, comment='是否启用上下文'),
    sa.Column('last_active_at', sa.String(length=50), nullable=True, comment='最后活跃时间'),
    sa.Column('id', sa.String(length=36), nullable=False, comment='主键ID'),
    sa.Column('created_at', sa.String(length=50), nullable=False, comment='创建时间'),
    sa.Column('updated_at', sa.String(length=50), nullable=False, comment='更新时间'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_index('idx_chat_session_subject_grade', 'chat_sessions', ['subject', 'grade_level'], unique=False)
    op.create_index('idx_chat_session_user_status', 'chat_sessions', ['user_id', 'status'], unique=False)
    op.create_index(op.f('ix_chat_sessions_user_id'), 'chat_sessions', ['user_id'], unique=False)
    op.create_table('knowledge_mastery',
    sa.Column('user_id', sa.UUID(), nullable=False, comment='用户ID'),
    sa.Column('subject', sa.String(length=20), nullable=False, comment='学科'),
    sa.Column('knowledge_point', sa.String(length=100), nullable=False, comment='知识点名称'),
    sa.Column('knowledge_point_code', sa.String(length=50), nullable=True, comment='知识点编码'),
    sa.Column('mastery_level', sa.Numeric(precision=3, scale=2), nullable=False, comment='掌握度（0.0-1.0）'),
    sa.Column('confidence_level', sa.Numeric(precision=3, scale=2), nullable=False, comment='置信度（0.0-1.0）'),
    sa.Column('mistake_count', sa.Integer(), nullable=False, comment='错误次数'),
    sa.Column('correct_count', sa.Integer(), nullable=False, comment='正确次数'),
    sa.Column('total_attempts', sa.Integer(), nullable=False, comment='总尝试次数'),
    sa.Column('last_practiced_at', sa.DateTime(timezone=True), nullable=True, comment='最后练习时间'),
    sa.Column('first_mastered_at', sa.DateTime(timezone=True), nullable=True, comment='首次掌握时间'),
    sa.Column('learning_curve', sa.JSON(), nullable=True, comment='学习曲线数据'),
    sa.Column('id', sa.String(length=36), nullable=False, comment='主键ID'),
    sa.Column('created_at', sa.String(length=50), nullable=False, comment='创建时间'),
    sa.Column('updated_at', sa.String(length=50), nullable=False, comment='更新时间'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_index(op.f('ix_knowledge_mastery_subject'), 'knowledge_mastery', ['subject'], unique=False)
    op.create_index(op.f('ix_knowledge_mastery_user_id'), 'knowledge_mastery', ['user_id'], unique=False)
    op.create_table('knowledge_relations',
    sa.Column('from_node_id', sa.UUID(), nullable=False, comment='源节点ID'),
    sa.Column('to_node_id', sa.UUID(), nullable=False, comment='目标节点ID'),
    sa.Column('relation_type', sa.String(length=20), nullable=False, comment='关系类型'),
    sa.Column('weight', sa.Numeric(precision=3, scale=2), nullable=False, comment='关系权重（0.0-1.0）'),
    sa.Column('is_bidirectional', sa.Boolean(), nullable=False, comment='是否双向关系'),
    sa.Column('description', sa.Text(), nullable=True, comment='关系描述'),
    sa.Column('evidence_count', sa.Integer(), nullable=False, comment='支持证据数量'),
    sa.Column('confidence', sa.Numeric(precision=3, scale=2), nullable=False, comment='置信度'),
    sa.Column('id', sa.String(length=36), nullable=False, comment='主键ID'),
    sa.Column('created_at', sa.String(length=50), nullable=False, comment='创建时间'),
    sa.Column('updated_at', sa.String(length=50), nullable=False, comment='更新时间'),
    sa.ForeignKeyConstraint(['from_node_id'], ['knowledge_nodes.id'], ),
    sa.ForeignKeyConstraint(['to_node_id'], ['knowledge_nodes.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_index('idx_knowledge_relations_from_to', 'knowledge_relations', ['from_node_id', 'to_node_id'], unique=False)
    op.create_index('idx_knowledge_relations_type', 'knowledge_relations', ['relation_type'], unique=False)
    op.create_index(op.f('ix_knowledge_relations_from_node_id'), 'knowledge_relations', ['from_node_id'], unique=False)
    op.create_index(op.f('ix_knowledge_relations_to_node_id'), 'knowledge_relations', ['to_node_id'], unique=False)
    op.create_table('learning_analytics',
    sa.Column('user_id', sa.String(length=36), nullable=False, comment='用户ID'),
    sa.Column('total_questions', sa.Integer(), nullable=False, comment='总提问数'),
    sa.Column('total_sessions', sa.Integer(), nullable=False, comment='总会话数'),
    sa.Column('active_subjects', sa.Text(), nullable=True, comment='活跃学科统计(JSON格式)'),
    sa.Column('question_types_stats', sa.Text(), nullable=True, comment='问题类型统计(JSON格式)'),
    sa.Column('preferred_subjects', sa.Text(), nullable=True, comment='偏好学科(JSON格式)'),
    sa.Column('difficulty_preference', sa.Integer(), nullable=True, comment='难度偏好(1-5)'),
    sa.Column('learning_style', sa.String(length=50), nullable=True, comment='学习风格'),
    sa.Column('avg_rating', sa.Integer(), nullable=True, comment='平均评分'),
    sa.Column('positive_feedback_rate', sa.Integer(), nullable=True, comment='正面反馈率(%)'),
    sa.Column('most_active_time', sa.String(length=20), nullable=True, comment='最活跃时间段'),
    sa.Column('weekly_pattern', sa.Text(), nullable=True, comment='周学习模式(JSON格式)'),
    sa.Column('knowledge_mastery', sa.Text(), nullable=True, comment='知识掌握度(JSON格式)'),
    sa.Column('improvement_areas', sa.Text(), nullable=True, comment='待提升领域(JSON格式)'),
    sa.Column('last_analyzed_at', sa.String(length=50), nullable=True, comment='最后分析时间'),
    sa.Column('id', sa.String(length=36), nullable=False, comment='主键ID'),
    sa.Column('created_at', sa.String(length=50), nullable=False, comment='创建时间'),
    sa.Column('updated_at', sa.String(length=50), nullable=False, comment='更新时间'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_index(op.f('ix_learning_analytics_user_id'), 'learning_analytics', ['user_id'], unique=True)
    op.create_table('mistake_records',
    sa.Column('user_id', sa.UUID(), nullable=False, comment='用户ID'),
    sa.Column('subject', sa.String(length=20), nullable=False, comment='学科'),
    sa.Column('chapter', sa.String(length=100), nullable=True, comment='章节'),
    sa.Column('title', sa.String(length=200), nullable=True, comment='题目标题'),
    sa.Column('image_urls', sa.JSON(), nullable=True, comment='题目图片URL列表'),
    sa.Column('ocr_text', sa.Text(), nullable=True, comment='OCR识别的文本内容'),
    sa.Column('ai_feedback', sa.JSON(), nullable=True, comment='AI批改和反馈结果'),
    sa.Column('knowledge_points', sa.JSON(), nullable=True, comment='涉及的知识点列表'),
    sa.Column('error_reasons', sa.JSON(), nullable=True, comment='错误原因分析'),
    sa.Column('difficulty_level', sa.Integer(), nullable=False, comment='难度等级(1-5)'),
    sa.Column('estimated_time', sa.Integer(), nullable=True, comment='预估解题时间（分钟）'),
    sa.Column('mastery_status', sa.String(length=20), nullable=False, comment='掌握状态'),
    sa.Column('review_count', sa.Integer(), nullable=False, comment='复习次数'),
    sa.Column('correct_count', sa.Integer(), nullable=False, comment='正确次数'),
    sa.Column('last_review_at', sa.DateTime(timezone=True), nullable=True, comment='最后复习时间'),
    sa.Column('next_review_at', sa.DateTime(timezone=True), nullable=True, comment='下次复习时间'),
    sa.Column('source', sa.String(length=50), nullable=False, comment='来源（upload/import/generate）'),
    sa.Column('tags', sa.JSON(), nullable=True, comment='标签列表'),
    sa.Column('notes', sa.Text(), nullable=True, comment='学生备注'),
    sa.Column('id', sa.String(length=36), nullable=False, comment='主键ID'),
    sa.Column('created_at', sa.String(length=50), nullable=False, comment='创建时间'),
    sa.Column('updated_at', sa.String(length=50), nullable=False, comment='更新时间'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_index(op.f('ix_mistake_records_subject'), 'mistake_records', ['subject'], unique=False)
    op.create_index(op.f('ix_mistake_records_user_id'), 'mistake_records', ['user_id'], unique=False)
    op.create_table('study_sessions',
    sa.Column('user_id', sa.UUID(), nullable=False, comment='用户ID'),
    sa.Column('session_type', sa.String(length=20), nullable=False, comment='会话类型（practice/review/test）'),
    sa.Column('subject', sa.String(length=20), nullable=True, comment='主要学科'),
    sa.Column('started_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False, comment='开始时间'),
    sa.Column('ended_at', sa.DateTime(timezone=True), nullable=True, comment='结束时间'),
    sa.Column('duration_seconds', sa.Integer(), nullable=True, comment='持续时长（秒）'),
    sa.Column('questions_attempted', sa.Integer(), nullable=False, comment='尝试题目数'),
    sa.Column('questions_correct', sa.Integer(), nullable=False, comment='正确题目数'),
    sa.Column('knowledge_points_practiced', sa.JSON(), nullable=True, comment='练习的知识点列表'),
    sa.Column('device_type', sa.String(length=20), nullable=True, comment='设备类型'),
    sa.Column('platform', sa.String(length=20), nullable=True, comment='平台（web/mobile/mini_program）'),
    sa.Column('id', sa.String(length=36), nullable=False, comment='主键ID'),
    sa.Column('created_at', sa.String(length=50), nullable=False, comment='创建时间'),
    sa.Column('updated_at', sa.String(length=50), nullable=False, comment='更新时间'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_index(op.f('ix_study_sessions_user_id'), 'study_sessions', ['user_id'], unique=False)
    op.create_table('user_learning_paths',
    sa.Column('user_id', sa.UUID(), nullable=False, comment='用户ID'),
    sa.Column('learning_path_id', sa.UUID(), nullable=False, comment='学习路径ID'),
    sa.Column('current_node_index', sa.Integer(), nullable=False, comment='当前节点索引'),
    sa.Column('completed_nodes', sa.JSON(), nullable=True, comment='已完成节点列表'),
    sa.Column('progress_percentage', sa.Numeric(precision=5, scale=2), nullable=False, comment='完成百分比'),
    sa.Column('started_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False, comment='开始时间'),
    sa.Column('last_accessed_at', sa.DateTime(timezone=True), nullable=True, comment='最后访问时间'),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True, comment='完成时间'),
    sa.Column('total_study_minutes', sa.Integer(), nullable=False, comment='总学习时长（分钟）'),
    sa.Column('status', sa.String(length=20), nullable=False, comment='状态（active/paused/completed/abandoned）'),
    sa.Column('difficulty_adjustment', sa.Numeric(precision=3, scale=2), nullable=False, comment='难度调整系数'),
    sa.Column('custom_sequence', sa.JSON(), nullable=True, comment='个性化调整后的序列'),
    sa.Column('satisfaction_rating', sa.Integer(), nullable=True, comment='满意度评分（1-5）'),
    sa.Column('feedback_notes', sa.Text(), nullable=True, comment='反馈备注'),
    sa.Column('id', sa.String(length=36), nullable=False, comment='主键ID'),
    sa.Column('created_at', sa.String(length=50), nullable=False, comment='创建时间'),
    sa.Column('updated_at', sa.String(length=50), nullable=False, comment='更新时间'),
    sa.ForeignKeyConstraint(['learning_path_id'], ['learning_paths.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_index(op.f('ix_user_learning_paths_learning_path_id'), 'user_learning_paths', ['learning_path_id'], unique=False)
    op.create_index(op.f('ix_user_learning_paths_user_id'), 'user_learning_paths', ['user_id'], unique=False)
    op.create_table('homework_submissions',
    sa.Column('homework_id', sa.UUID(), nullable=False, comment='作业ID'),
    sa.Column('student_id', sa.UUID(), nullable=False, comment='学生ID'),
    sa.Column('student_name', sa.String(length=50), nullable=False, comment='学生姓名'),
    sa.Column('submission_title', sa.String(length=200), nullable=True, comment='提交标题'),
    sa.Column('submission_note', sa.Text(), nullable=True, comment='提交备注'),
    sa.Column('status', sa.String(length=20), nullable=False, comment='提交状态'),
    sa.Column('submitted_at', sa.DateTime(timezone=True), nullable=True, comment='提交时间'),
    sa.Column('total_score', sa.Float(), nullable=True, comment='总分'),
    sa.Column('accuracy_rate', sa.Float(), nullable=True, comment='正确率'),
    sa.Column('completion_time', sa.Integer(), nullable=True, comment='完成时间（分钟）'),
    sa.Column('ai_review_data', sa.JSON(), nullable=True, comment='AI批改详细数据（JSON格式）'),
    sa.Column('weak_knowledge_points', sa.JSON(), nullable=True, comment='薄弱知识点（JSON格式）'),
    sa.Column('improvement_suggestions', sa.JSON(), nullable=True, comment='改进建议（JSON格式）'),
    sa.Column('device_info', sa.JSON(), nullable=True, comment='提交设备信息（JSON格式）'),
    sa.Column('ip_address', sa.String(length=45), nullable=True, comment='IP地址'),
    sa.Column('id', sa.String(length=36), nullable=False, comment='主键ID'),
    sa.Column('created_at', sa.String(length=50), nullable=False, comment='创建时间'),
    sa.Column('updated_at', sa.String(length=50), nullable=False, comment='更新时间'),
    sa.ForeignKeyConstraint(['homework_id'], ['homework.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('homework_id', 'student_id', name='uq_homework_student'),
    sa.UniqueConstraint('id')
    )
    op.create_index('idx_submission_homework_submitted', 'homework_submissions', ['homework_id', 'submitted_at'], unique=False)
    op.create_index('idx_submission_student_status', 'homework_submissions', ['student_id', 'status'], unique=False)
    op.create_index(op.f('ix_homework_submissions_homework_id'), 'homework_submissions', ['homework_id'], unique=False)
    op.create_index(op.f('ix_homework_submissions_status'), 'homework_submissions', ['status'], unique=False)
    op.create_index(op.f('ix_homework_submissions_student_id'), 'homework_submissions', ['student_id'], unique=False)
    op.create_table('questions',
    sa.Column('session_id', sa.String(length=36), nullable=False, comment='会话ID'),
    sa.Column('user_id', sa.String(length=36), nullable=False, comment='用户ID'),
    sa.Column('content', sa.Text(), nullable=False, comment='问题内容'),
    sa.Column('question_type', sa.String(length=30), nullable=True, comment='问题类型'),
    sa.Column('subject', sa.String(length=50), nullable=True, comment='学科'),
    sa.Column('topic', sa.String(length=100), nullable=True, comment='话题/知识点'),
    sa.Column('difficulty_level', sa.Integer(), nullable=True, comment='难度级别(1-5)'),
    sa.Column('context_data', sa.Text(), nullable=True, comment='上下文数据(JSON格式)'),
    sa.Column('has_images', sa.Boolean(), nullable=False, comment='是否包含图片'),
    sa.Column('image_urls', sa.Text(), nullable=True, comment='图片URL列表(JSON格式)'),
    sa.Column('is_processed', sa.Boolean(), nullable=False, comment='是否已处理'),
    sa.Column('processing_time', sa.Integer(), nullable=True, comment='处理耗时(毫秒)'),
    sa.Column('id', sa.String(length=36), nullable=False, comment='主键ID'),
    sa.Column('created_at', sa.String(length=50), nullable=False, comment='创建时间'),
    sa.Column('updated_at', sa.String(length=50), nullable=False, comment='更新时间'),
    sa.ForeignKeyConstraint(['session_id'], ['chat_sessions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_index('idx_question_session_created', 'questions', ['session_id', 'created_at'], unique=False)
    op.create_index('idx_question_type_topic', 'questions', ['question_type', 'topic'], unique=False)
    op.create_index('idx_question_user_subject', 'questions', ['user_id', 'subject'], unique=False)
    op.create_index(op.f('ix_questions_session_id'), 'questions', ['session_id'], unique=False)
    op.create_index(op.f('ix_questions_user_id'), 'questions', ['user_id'], unique=False)
    op.create_table('review_schedule',
    sa.Column('user_id', sa.UUID(), nullable=False, comment='用户ID'),
    sa.Column('mistake_record_id', sa.UUID(), nullable=False, comment='错题记录ID'),
    sa.Column('scheduled_at', sa.DateTime(timezone=True), nullable=False, comment='计划复习时间'),
    sa.Column('review_type', sa.String(length=20), nullable=False, comment='复习类型（ebbinghaus/spaced/manual）'),
    sa.Column('interval_days', sa.Integer(), nullable=False, comment='间隔天数'),
    sa.Column('priority', sa.Integer(), nullable=False, comment='优先级（1-5）'),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True, comment='实际完成时间'),
    sa.Column('result', sa.String(length=20), nullable=True, comment='复习结果（correct/incorrect/skipped）'),
    sa.Column('duration_seconds', sa.Integer(), nullable=True, comment='花费时长（秒）'),
    sa.Column('next_review_at', sa.DateTime(timezone=True), nullable=True, comment='下次复习时间'),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='是否激活'),
    sa.Column('notes', sa.Text(), nullable=True, comment='复习备注'),
    sa.Column('id', sa.String(length=36), nullable=False, comment='主键ID'),
    sa.Column('created_at', sa.String(length=50), nullable=False, comment='创建时间'),
    sa.Column('updated_at', sa.String(length=50), nullable=False, comment='更新时间'),
    sa.ForeignKeyConstraint(['mistake_record_id'], ['mistake_records.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_index(op.f('ix_review_schedule_mistake_record_id'), 'review_schedule', ['mistake_record_id'], unique=False)
    op.create_index(op.f('ix_review_schedule_scheduled_at'), 'review_schedule', ['scheduled_at'], unique=False)
    op.create_index(op.f('ix_review_schedule_user_id'), 'review_schedule', ['user_id'], unique=False)
    op.create_table('answers',
    sa.Column('question_id', sa.String(length=36), nullable=False, comment='问题ID'),
    sa.Column('content', sa.Text(), nullable=False, comment='答案内容'),
    sa.Column('model_name', sa.String(length=50), nullable=True, comment='使用的AI模型'),
    sa.Column('tokens_used', sa.Integer(), nullable=True, comment='消耗的token数'),
    sa.Column('generation_time', sa.Integer(), nullable=True, comment='生成耗时(毫秒)'),
    sa.Column('confidence_score', sa.Integer(), nullable=True, comment='置信度分数(0-100)'),
    sa.Column('user_rating', sa.Integer(), nullable=True, comment='用户评分(1-5)'),
    sa.Column('user_feedback', sa.Text(), nullable=True, comment='用户反馈'),
    sa.Column('is_helpful', sa.Boolean(), nullable=True, comment='是否有帮助'),
    sa.Column('related_topics', sa.Text(), nullable=True, comment='相关话题(JSON格式)'),
    sa.Column('suggested_questions', sa.Text(), nullable=True, comment='推荐问题(JSON格式)'),
    sa.Column('id', sa.String(length=36), nullable=False, comment='主键ID'),
    sa.Column('created_at', sa.String(length=50), nullable=False, comment='创建时间'),
    sa.Column('updated_at', sa.String(length=50), nullable=False, comment='更新时间'),
    sa.ForeignKeyConstraint(['question_id'], ['questions.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_index(op.f('ix_answers_question_id'), 'answers', ['question_id'], unique=True)
    op.create_table('homework_images',
    sa.Column('submission_id', sa.UUID(), nullable=False, comment='提交ID'),
    sa.Column('original_filename', sa.String(length=255), nullable=False, comment='原始文件名'),
    sa.Column('file_path', sa.String(length=500), nullable=False, comment='文件存储路径'),
    sa.Column('file_url', sa.String(length=500), nullable=True, comment='文件访问URL'),
    sa.Column('file_size', sa.Integer(), nullable=False, comment='文件大小（字节）'),
    sa.Column('mime_type', sa.String(length=100), nullable=False, comment='MIME类型'),
    sa.Column('image_width', sa.Integer(), nullable=True, comment='图片宽度'),
    sa.Column('image_height', sa.Integer(), nullable=True, comment='图片高度'),
    sa.Column('display_order', sa.Integer(), nullable=False, comment='显示顺序'),
    sa.Column('is_primary', sa.Boolean(), nullable=False, comment='是否为主图'),
    sa.Column('ocr_text', sa.Text(), nullable=True, comment='OCR识别文本'),
    sa.Column('ocr_confidence', sa.Float(), nullable=True, comment='OCR识别置信度'),
    sa.Column('ocr_data', sa.JSON(), nullable=True, comment='OCR详细数据（JSON格式）'),
    sa.Column('ocr_processed_at', sa.DateTime(timezone=True), nullable=True, comment='OCR处理时间'),
    sa.Column('is_processed', sa.Boolean(), nullable=False, comment='是否已处理'),
    sa.Column('processing_error', sa.Text(), nullable=True, comment='处理错误信息'),
    sa.Column('id', sa.String(length=36), nullable=False, comment='主键ID'),
    sa.Column('created_at', sa.String(length=50), nullable=False, comment='创建时间'),
    sa.Column('updated_at', sa.String(length=50), nullable=False, comment='更新时间'),
    sa.ForeignKeyConstraint(['submission_id'], ['homework_submissions.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_index('idx_image_submission_order', 'homework_images', ['submission_id', 'display_order'], unique=False)
    op.create_index(op.f('ix_homework_images_submission_id'), 'homework_images', ['submission_id'], unique=False)
    op.create_table('homework_reviews',
    sa.Column('submission_id', sa.UUID(), nullable=False, comment='提交ID'),
    sa.Column('review_type', sa.String(length=20), nullable=False, comment='批改类型（ai_auto/manual/hybrid）'),
    sa.Column('reviewer_id', sa.UUID(), nullable=True, comment='人工批改者ID'),
    sa.Column('reviewer_name', sa.String(length=50), nullable=True, comment='批改者姓名'),
    sa.Column('status', sa.String(length=20), nullable=False, comment='批改状态'),
    sa.Column('started_at', sa.DateTime(timezone=True), nullable=True, comment='开始批改时间'),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True, comment='完成批改时间'),
    sa.Column('processing_duration', sa.Integer(), nullable=True, comment='处理时长（秒）'),
    sa.Column('total_score', sa.Float(), nullable=True, comment='总分'),
    sa.Column('max_score', sa.Float(), nullable=False, comment='满分'),
    sa.Column('accuracy_rate', sa.Float(), nullable=True, comment='正确率'),
    sa.Column('overall_comment', sa.Text(), nullable=True, comment='总体评价'),
    sa.Column('strengths', sa.JSON(), nullable=True, comment='优点列表（JSON格式）'),
    sa.Column('weaknesses', sa.JSON(), nullable=True, comment='不足列表（JSON格式）'),
    sa.Column('suggestions', sa.JSON(), nullable=True, comment='改进建议（JSON格式）'),
    sa.Column('knowledge_point_analysis', sa.JSON(), nullable=True, comment='知识点分析（JSON格式）'),
    sa.Column('difficulty_analysis', sa.JSON(), nullable=True, comment='难度分析（JSON格式）'),
    sa.Column('question_reviews', sa.JSON(), nullable=True, comment='题目级别评价（JSON格式）'),
    sa.Column('ai_model_version', sa.String(length=50), nullable=True, comment='AI模型版本'),
    sa.Column('ai_confidence_score', sa.Float(), nullable=True, comment='AI置信度分数'),
    sa.Column('ai_processing_tokens', sa.Integer(), nullable=True, comment='AI处理token数'),
    sa.Column('quality_score', sa.Float(), nullable=True, comment='批改质量分数'),
    sa.Column('needs_manual_review', sa.Boolean(), nullable=False, comment='是否需要人工复核'),
    sa.Column('error_message', sa.Text(), nullable=True, comment='错误信息'),
    sa.Column('error_details', sa.JSON(), nullable=True, comment='错误详情（JSON格式）'),
    sa.Column('id', sa.String(length=36), nullable=False, comment='主键ID'),
    sa.Column('created_at', sa.String(length=50), nullable=False, comment='创建时间'),
    sa.Column('updated_at', sa.String(length=50), nullable=False, comment='更新时间'),
    sa.ForeignKeyConstraint(['reviewer_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['submission_id'], ['homework_submissions.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_index('idx_review_completed', 'homework_reviews', ['completed_at'], unique=False)
    op.create_index('idx_review_submission_status', 'homework_reviews', ['submission_id', 'status'], unique=False)
    op.create_index(op.f('ix_homework_reviews_status'), 'homework_reviews', ['status'], unique=False)
    op.create_index(op.f('ix_homework_reviews_submission_id'), 'homework_reviews', ['submission_id'], unique=False)
    op.add_column('homework', sa.Column('description', sa.Text(), nullable=True, comment='作业描述'))
    op.add_column('homework', sa.Column('subject', sa.String(length=20), nullable=False, comment='学科'))
    op.add_column('homework', sa.Column('homework_type', sa.String(length=20), nullable=False, comment='作业类型'))
    op.add_column('homework', sa.Column('difficulty_level', sa.String(length=10), nullable=False, comment='难度级别'))
    op.add_column('homework', sa.Column('grade_level', sa.String(length=20), nullable=False, comment='适用学段'))
    op.add_column('homework', sa.Column('chapter', sa.String(length=100), nullable=True, comment='章节'))
    op.add_column('homework', sa.Column('knowledge_points', sa.JSON(), nullable=True, comment='知识点列表（JSON格式）'))
    op.add_column('homework', sa.Column('estimated_duration', sa.Integer(), nullable=True, comment='预计完成时间（分钟）'))
    op.add_column('homework', sa.Column('deadline', sa.DateTime(timezone=True), nullable=True, comment='截止时间'))
    op.add_column('homework', sa.Column('creator_id', sa.UUID(), nullable=True, comment='创建者ID（教师）'))
    op.add_column('homework', sa.Column('creator_name', sa.String(length=50), nullable=True, comment='创建者姓名'))
    op.add_column('homework', sa.Column('is_active', sa.Boolean(), nullable=False, comment='是否激活'))
    op.add_column('homework', sa.Column('is_template', sa.Boolean(), nullable=False, comment='是否为模板'))
    op.add_column('homework', sa.Column('total_submissions', sa.Integer(), nullable=False, comment='总提交数'))
    op.add_column('homework', sa.Column('avg_score', sa.Float(), nullable=True, comment='平均分'))
    op.alter_column('homework', 'title',
               existing_type=sa.TEXT(),
               type_=sa.String(length=200),
               existing_nullable=False)
    op.alter_column('homework', 'id',
               existing_type=sa.TEXT(),
               type_=sa.String(length=36),
               nullable=False)
    op.alter_column('homework', 'created_at',
               existing_type=sa.TEXT(),
               type_=sa.String(length=50),
               existing_nullable=False)
    op.alter_column('homework', 'updated_at',
               existing_type=sa.TEXT(),
               type_=sa.String(length=50),
               existing_nullable=False)
    op.create_index('idx_homework_creator_active', 'homework', ['creator_id', 'is_active'], unique=False)
    op.create_index('idx_homework_subject_grade', 'homework', ['subject', 'grade_level'], unique=False)
    op.create_index(op.f('ix_homework_creator_id'), 'homework', ['creator_id'], unique=False)
    op.create_index(op.f('ix_homework_grade_level'), 'homework', ['grade_level'], unique=False)
    op.create_index(op.f('ix_homework_subject'), 'homework', ['subject'], unique=False)
    op.create_unique_constraint(None, 'homework', ['id'])
    op.drop_constraint(None, 'homework', type_='foreignkey')
    op.create_foreign_key(None, 'homework', 'users', ['creator_id'], ['id'])
    op.drop_column('homework', 'user_id')
    op.drop_column('homework', 'file_url')
    op.drop_column('homework', 'status')
    op.drop_column('homework', 'file_type')
    op.drop_column('homework', 'file_name')
    op.drop_column('homework', 'content')
    op.drop_column('homework', 'feedback')
    op.drop_column('homework', 'score')
    op.alter_column('user_sessions', 'user_id',
               existing_type=sa.TEXT(),
               type_=sa.String(length=36),
               existing_nullable=False)
    op.alter_column('user_sessions', 'device_id',
               existing_type=sa.TEXT(),
               type_=sa.String(length=128),
               existing_nullable=True)
    op.alter_column('user_sessions', 'device_type',
               existing_type=sa.TEXT(),
               type_=sa.String(length=20),
               existing_nullable=True)
    op.alter_column('user_sessions', 'access_token_jti',
               existing_type=sa.TEXT(),
               type_=sa.String(length=36),
               existing_nullable=False)
    op.alter_column('user_sessions', 'refresh_token_jti',
               existing_type=sa.TEXT(),
               type_=sa.String(length=36),
               existing_nullable=False)
    op.alter_column('user_sessions', 'expires_at',
               existing_type=sa.TEXT(),
               type_=sa.String(length=50),
               existing_nullable=False)
    op.alter_column('user_sessions', 'is_revoked',
               existing_type=sa.INTEGER(),
               server_default=None,
               type_=sa.Boolean(),
               nullable=False)
    op.alter_column('user_sessions', 'ip_address',
               existing_type=sa.TEXT(),
               type_=sa.String(length=45),
               existing_nullable=True)
    op.alter_column('user_sessions', 'id',
               existing_type=sa.TEXT(),
               type_=sa.String(length=36),
               nullable=False)
    op.alter_column('user_sessions', 'created_at',
               existing_type=sa.TEXT(),
               type_=sa.String(length=50),
               existing_nullable=False)
    op.alter_column('user_sessions', 'updated_at',
               existing_type=sa.TEXT(),
               type_=sa.String(length=50),
               existing_nullable=False)
    op.create_index(op.f('ix_user_sessions_user_id'), 'user_sessions', ['user_id'], unique=False)
    op.create_unique_constraint(None, 'user_sessions', ['id'])
    op.drop_constraint(None, 'user_sessions', type_='foreignkey')
    op.alter_column('users', 'phone',
               existing_type=sa.TEXT(),
               type_=sa.String(length=11),
               existing_nullable=False)
    op.alter_column('users', 'password_hash',
               existing_type=sa.TEXT(),
               type_=sa.String(length=255),
               existing_nullable=False)
    op.alter_column('users', 'wechat_openid',
               existing_type=sa.TEXT(),
               type_=sa.String(length=128),
               existing_nullable=True)
    op.alter_column('users', 'wechat_unionid',
               existing_type=sa.TEXT(),
               type_=sa.String(length=128),
               existing_nullable=True)
    op.alter_column('users', 'name',
               existing_type=sa.TEXT(),
               type_=sa.String(length=50),
               existing_nullable=False)
    op.alter_column('users', 'nickname',
               existing_type=sa.TEXT(),
               type_=sa.String(length=50),
               existing_nullable=True)
    op.alter_column('users', 'avatar_url',
               existing_type=sa.TEXT(),
               type_=sa.String(length=500),
               existing_nullable=True)
    op.alter_column('users', 'school',
               existing_type=sa.TEXT(),
               type_=sa.String(length=100),
               existing_nullable=True)
    op.alter_column('users', 'grade_level',
               existing_type=sa.TEXT(),
               type_=sa.String(length=20),
               existing_nullable=True)
    op.alter_column('users', 'class_name',
               existing_type=sa.TEXT(),
               type_=sa.String(length=50),
               existing_nullable=True)
    op.alter_column('users', 'institution',
               existing_type=sa.TEXT(),
               type_=sa.String(length=100),
               existing_nullable=True)
    op.alter_column('users', 'parent_contact',
               existing_type=sa.TEXT(),
               type_=sa.String(length=11),
               existing_nullable=True)
    op.alter_column('users', 'parent_name',
               existing_type=sa.TEXT(),
               type_=sa.String(length=50),
               existing_nullable=True)
    op.alter_column('users', 'role',
               existing_type=sa.TEXT(),
               server_default=None,
               type_=sa.String(length=20),
               nullable=False)
    op.alter_column('users', 'is_active',
               existing_type=sa.INTEGER(),
               server_default=None,
               type_=sa.Boolean(),
               nullable=False)
    op.alter_column('users', 'is_verified',
               existing_type=sa.INTEGER(),
               server_default=None,
               type_=sa.Boolean(),
               nullable=False)
    op.alter_column('users', 'notification_enabled',
               existing_type=sa.INTEGER(),
               server_default=None,
               type_=sa.Boolean(),
               nullable=False)
    op.alter_column('users', 'last_login_at',
               existing_type=sa.TEXT(),
               type_=sa.String(length=50),
               existing_nullable=True)
    op.alter_column('users', 'login_count',
               existing_type=sa.INTEGER(),
               server_default=None,
               nullable=False)
    op.alter_column('users', 'id',
               existing_type=sa.TEXT(),
               type_=sa.String(length=36),
               nullable=False)
    op.alter_column('users', 'created_at',
               existing_type=sa.TEXT(),
               type_=sa.String(length=50),
               existing_nullable=False)
    op.alter_column('users', 'updated_at',
               existing_type=sa.TEXT(),
               type_=sa.String(length=50),
               existing_nullable=False)
    op.create_index(op.f('ix_users_phone'), 'users', ['phone'], unique=True)
    op.create_index(op.f('ix_users_wechat_openid'), 'users', ['wechat_openid'], unique=True)
    op.create_index(op.f('ix_users_wechat_unionid'), 'users', ['wechat_unionid'], unique=True)
    op.create_unique_constraint('uq_user_phone', 'users', ['phone'])
    op.create_unique_constraint('uq_user_wechat_openid', 'users', ['wechat_openid'])
    op.create_unique_constraint(None, 'users', ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'users', type_='unique')
    op.drop_constraint('uq_user_wechat_openid', 'users', type_='unique')
    op.drop_constraint('uq_user_phone', 'users', type_='unique')
    op.drop_index(op.f('ix_users_wechat_unionid'), table_name='users')
    op.drop_index(op.f('ix_users_wechat_openid'), table_name='users')
    op.drop_index(op.f('ix_users_phone'), table_name='users')
    op.alter_column('users', 'updated_at',
               existing_type=sa.String(length=50),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.alter_column('users', 'created_at',
               existing_type=sa.String(length=50),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.alter_column('users', 'id',
               existing_type=sa.String(length=36),
               type_=sa.TEXT(),
               nullable=True)
    op.alter_column('users', 'login_count',
               existing_type=sa.INTEGER(),
               server_default=sa.text('0'),
               nullable=True)
    op.alter_column('users', 'last_login_at',
               existing_type=sa.String(length=50),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('users', 'notification_enabled',
               existing_type=sa.Boolean(),
               server_default=sa.text('1'),
               type_=sa.INTEGER(),
               nullable=True)
    op.alter_column('users', 'is_verified',
               existing_type=sa.Boolean(),
               server_default=sa.text('0'),
               type_=sa.INTEGER(),
               nullable=True)
    op.alter_column('users', 'is_active',
               existing_type=sa.Boolean(),
               server_default=sa.text('1'),
               type_=sa.INTEGER(),
               nullable=True)
    op.alter_column('users', 'role',
               existing_type=sa.String(length=20),
               server_default=sa.text("'student'"),
               type_=sa.TEXT(),
               nullable=True)
    op.alter_column('users', 'parent_name',
               existing_type=sa.String(length=50),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('users', 'parent_contact',
               existing_type=sa.String(length=11),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('users', 'institution',
               existing_type=sa.String(length=100),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('users', 'class_name',
               existing_type=sa.String(length=50),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('users', 'grade_level',
               existing_type=sa.String(length=20),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('users', 'school',
               existing_type=sa.String(length=100),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('users', 'avatar_url',
               existing_type=sa.String(length=500),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('users', 'nickname',
               existing_type=sa.String(length=50),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('users', 'name',
               existing_type=sa.String(length=50),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.alter_column('users', 'wechat_unionid',
               existing_type=sa.String(length=128),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('users', 'wechat_openid',
               existing_type=sa.String(length=128),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('users', 'password_hash',
               existing_type=sa.String(length=255),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.alter_column('users', 'phone',
               existing_type=sa.String(length=11),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.create_foreign_key(None, 'user_sessions', 'users', ['user_id'], ['id'])
    op.drop_constraint(None, 'user_sessions', type_='unique')
    op.drop_index(op.f('ix_user_sessions_user_id'), table_name='user_sessions')
    op.alter_column('user_sessions', 'updated_at',
               existing_type=sa.String(length=50),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.alter_column('user_sessions', 'created_at',
               existing_type=sa.String(length=50),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.alter_column('user_sessions', 'id',
               existing_type=sa.String(length=36),
               type_=sa.TEXT(),
               nullable=True)
    op.alter_column('user_sessions', 'ip_address',
               existing_type=sa.String(length=45),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('user_sessions', 'is_revoked',
               existing_type=sa.Boolean(),
               server_default=sa.text('0'),
               type_=sa.INTEGER(),
               nullable=True)
    op.alter_column('user_sessions', 'expires_at',
               existing_type=sa.String(length=50),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.alter_column('user_sessions', 'refresh_token_jti',
               existing_type=sa.String(length=36),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.alter_column('user_sessions', 'access_token_jti',
               existing_type=sa.String(length=36),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.alter_column('user_sessions', 'device_type',
               existing_type=sa.String(length=20),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('user_sessions', 'device_id',
               existing_type=sa.String(length=128),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.alter_column('user_sessions', 'user_id',
               existing_type=sa.String(length=36),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.add_column('homework', sa.Column('score', sa.INTEGER(), nullable=True))
    op.add_column('homework', sa.Column('feedback', sa.TEXT(), nullable=True))
    op.add_column('homework', sa.Column('content', sa.TEXT(), nullable=True))
    op.add_column('homework', sa.Column('file_name', sa.TEXT(), nullable=True))
    op.add_column('homework', sa.Column('file_type', sa.TEXT(), nullable=True))
    op.add_column('homework', sa.Column('status', sa.TEXT(), server_default=sa.text("'pending'"), nullable=True))
    op.add_column('homework', sa.Column('file_url', sa.TEXT(), nullable=True))
    op.add_column('homework', sa.Column('user_id', sa.TEXT(), nullable=False))
    op.drop_constraint(None, 'homework', type_='foreignkey')
    op.create_foreign_key(None, 'homework', 'users', ['user_id'], ['id'])
    op.drop_constraint(None, 'homework', type_='unique')
    op.drop_index(op.f('ix_homework_subject'), table_name='homework')
    op.drop_index(op.f('ix_homework_grade_level'), table_name='homework')
    op.drop_index(op.f('ix_homework_creator_id'), table_name='homework')
    op.drop_index('idx_homework_subject_grade', table_name='homework')
    op.drop_index('idx_homework_creator_active', table_name='homework')
    op.alter_column('homework', 'updated_at',
               existing_type=sa.String(length=50),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.alter_column('homework', 'created_at',
               existing_type=sa.String(length=50),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.alter_column('homework', 'id',
               existing_type=sa.String(length=36),
               type_=sa.TEXT(),
               nullable=True)
    op.alter_column('homework', 'title',
               existing_type=sa.String(length=200),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.drop_column('homework', 'avg_score')
    op.drop_column('homework', 'total_submissions')
    op.drop_column('homework', 'is_template')
    op.drop_column('homework', 'is_active')
    op.drop_column('homework', 'creator_name')
    op.drop_column('homework', 'creator_id')
    op.drop_column('homework', 'deadline')
    op.drop_column('homework', 'estimated_duration')
    op.drop_column('homework', 'knowledge_points')
    op.drop_column('homework', 'chapter')
    op.drop_column('homework', 'grade_level')
    op.drop_column('homework', 'difficulty_level')
    op.drop_column('homework', 'homework_type')
    op.drop_column('homework', 'subject')
    op.drop_column('homework', 'description')
    op.drop_index(op.f('ix_homework_reviews_submission_id'), table_name='homework_reviews')
    op.drop_index(op.f('ix_homework_reviews_status'), table_name='homework_reviews')
    op.drop_index('idx_review_submission_status', table_name='homework_reviews')
    op.drop_index('idx_review_completed', table_name='homework_reviews')
    op.drop_table('homework_reviews')
    op.drop_index(op.f('ix_homework_images_submission_id'), table_name='homework_images')
    op.drop_index('idx_image_submission_order', table_name='homework_images')
    op.drop_table('homework_images')
    op.drop_index(op.f('ix_answers_question_id'), table_name='answers')
    op.drop_table('answers')
    op.drop_index(op.f('ix_review_schedule_user_id'), table_name='review_schedule')
    op.drop_index(op.f('ix_review_schedule_scheduled_at'), table_name='review_schedule')
    op.drop_index(op.f('ix_review_schedule_mistake_record_id'), table_name='review_schedule')
    op.drop_table('review_schedule')
    op.drop_index(op.f('ix_questions_user_id'), table_name='questions')
    op.drop_index(op.f('ix_questions_session_id'), table_name='questions')
    op.drop_index('idx_question_user_subject', table_name='questions')
    op.drop_index('idx_question_type_topic', table_name='questions')
    op.drop_index('idx_question_session_created', table_name='questions')
    op.drop_table('questions')
    op.drop_index(op.f('ix_homework_submissions_student_id'), table_name='homework_submissions')
    op.drop_index(op.f('ix_homework_submissions_status'), table_name='homework_submissions')
    op.drop_index(op.f('ix_homework_submissions_homework_id'), table_name='homework_submissions')
    op.drop_index('idx_submission_student_status', table_name='homework_submissions')
    op.drop_index('idx_submission_homework_submitted', table_name='homework_submissions')
    op.drop_table('homework_submissions')
    op.drop_index(op.f('ix_user_learning_paths_user_id'), table_name='user_learning_paths')
    op.drop_index(op.f('ix_user_learning_paths_learning_path_id'), table_name='user_learning_paths')
    op.drop_table('user_learning_paths')
    op.drop_index(op.f('ix_study_sessions_user_id'), table_name='study_sessions')
    op.drop_table('study_sessions')
    op.drop_index(op.f('ix_mistake_records_user_id'), table_name='mistake_records')
    op.drop_index(op.f('ix_mistake_records_subject'), table_name='mistake_records')
    op.drop_table('mistake_records')
    op.drop_index(op.f('ix_learning_analytics_user_id'), table_name='learning_analytics')
    op.drop_table('learning_analytics')
    op.drop_index(op.f('ix_knowledge_relations_to_node_id'), table_name='knowledge_relations')
    op.drop_index(op.f('ix_knowledge_relations_from_node_id'), table_name='knowledge_relations')
    op.drop_index('idx_knowledge_relations_type', table_name='knowledge_relations')
    op.drop_index('idx_knowledge_relations_from_to', table_name='knowledge_relations')
    op.drop_table('knowledge_relations')
    op.drop_index(op.f('ix_knowledge_mastery_user_id'), table_name='knowledge_mastery')
    op.drop_index(op.f('ix_knowledge_mastery_subject'), table_name='knowledge_mastery')
    op.drop_table('knowledge_mastery')
    op.drop_index(op.f('ix_chat_sessions_user_id'), table_name='chat_sessions')
    op.drop_index('idx_chat_session_user_status', table_name='chat_sessions')
    op.drop_index('idx_chat_session_subject_grade', table_name='chat_sessions')
    op.drop_table('chat_sessions')
    op.drop_index(op.f('ix_learning_paths_subject'), table_name='learning_paths')
    op.drop_table('learning_paths')
    op.drop_index(op.f('ix_knowledge_nodes_subject'), table_name='knowledge_nodes')
    op.drop_index('idx_knowledge_nodes_subject_level', table_name='knowledge_nodes')
    op.drop_index('idx_knowledge_nodes_parent', table_name='knowledge_nodes')
    op.drop_table('knowledge_nodes')
    op.drop_index(op.f('ix_knowledge_graphs_subject'), table_name='knowledge_graphs')
    op.drop_table('knowledge_graphs')
    # ### end Alembic commands ###
